[{"/home/yarik/Documents/binary/react-stage1/part1/src/index.js":"1","/home/yarik/Documents/binary/react-stage1/part1/src/App.js":"2","/home/yarik/Documents/binary/react-stage1/part1/src/components/Logo.js":"3","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Chat.js":"4","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Header.js":"5","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/MessageList.js":"6","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Message.js":"7","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/MessageInput.js":"8","/home/yarik/Documents/binary/react-stage1/part1/src/components/animatedElem/Spiner.js":"9","/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Avatar.js":"10","/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Like.js":"11","/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Delete.js":"12","/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Edit.js":"13","/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Time.js":"14","/home/yarik/Documents/binary/react-stage1/part2/src/index.js":"15","/home/yarik/Documents/binary/react-stage1/part2/src/App.js":"16","/home/yarik/Documents/binary/react-stage1/part2/src/components/Logo.js":"17","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Chat.js":"18","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Header.js":"19","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageList.js":"20","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageInput.js":"21","/home/yarik/Documents/binary/react-stage1/part2/src/components/animatedElem/Spiner.js":"22","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Message.js":"23","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Time.js":"24","/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Avatar.js":"25","/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Like.js":"26","/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Delete.js":"27","/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Edit.js":"28","/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/mainReducer.js":"29","/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/headerReducer.js":"30","/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/actionsType.js":"31","/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/messageActions.js":"32","/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/headerActions.js":"33","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Modal.js":"34","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MyMessage.js":"35","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/OtherMessage.js":"36","/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/chatReducer.js":"37"},{"size":500,"mtime":1613475534067,"results":"38","hashOfConfig":"39"},{"size":227,"mtime":1613482324129,"results":"40","hashOfConfig":"39"},{"size":164,"mtime":1613488962424,"results":"41","hashOfConfig":"39"},{"size":3812,"mtime":1613599235140,"results":"42","hashOfConfig":"39"},{"size":625,"mtime":1613596339339,"results":"43","hashOfConfig":"39"},{"size":927,"mtime":1613596113284,"results":"44","hashOfConfig":"39"},{"size":2285,"mtime":1613588042993,"results":"45","hashOfConfig":"39"},{"size":2073,"mtime":1613592025816,"results":"46","hashOfConfig":"39"},{"size":261,"mtime":1613493188431,"results":"47","hashOfConfig":"39"},{"size":234,"mtime":1613499810200,"results":"48","hashOfConfig":"39"},{"size":485,"mtime":1613563962226,"results":"49","hashOfConfig":"39"},{"size":780,"mtime":1613573695198,"results":"50","hashOfConfig":"39"},{"size":378,"mtime":1613588222873,"results":"51","hashOfConfig":"39"},{"size":1064,"mtime":1613596213115,"results":"52","hashOfConfig":"39"},{"size":500,"mtime":1613835025091,"results":"53","hashOfConfig":"54"},{"size":227,"mtime":1613834998927,"results":"55","hashOfConfig":"54"},{"size":164,"mtime":1613488962424,"results":"56","hashOfConfig":"54"},{"size":2387,"mtime":1613750160318,"results":"57","hashOfConfig":"54"},{"size":715,"mtime":1613750727620,"results":"58","hashOfConfig":"54"},{"size":1395,"mtime":1613751416295,"results":"59","hashOfConfig":"54"},{"size":1831,"mtime":1613750423477,"results":"60","hashOfConfig":"54"},{"size":261,"mtime":1613493188431,"results":"61","hashOfConfig":"54"},{"size":1077,"mtime":1613751171904,"results":"62","hashOfConfig":"54"},{"size":1202,"mtime":1613751162453,"results":"63","hashOfConfig":"54"},{"size":319,"mtime":1613751159393,"results":"64","hashOfConfig":"54"},{"size":485,"mtime":1613563962226,"results":"65","hashOfConfig":"54"},{"size":864,"mtime":1613751062593,"results":"66","hashOfConfig":"54"},{"size":460,"mtime":1613751060769,"results":"67","hashOfConfig":"54"},{"size":221,"mtime":1613747017914,"results":"68","hashOfConfig":"54"},{"size":1028,"mtime":1613666658118,"results":"69","hashOfConfig":"54"},{"size":364,"mtime":1613736638452,"results":"70","hashOfConfig":"54"},{"size":739,"mtime":1613748463583,"results":"71","hashOfConfig":"54"},{"size":177,"mtime":1613666168368,"results":"72","hashOfConfig":"54"},{"size":2260,"mtime":1613750320269,"results":"73","hashOfConfig":"54"},{"size":1469,"mtime":1613750691170,"results":"74","hashOfConfig":"54"},{"size":1010,"mtime":1613750804227,"results":"75","hashOfConfig":"54"},{"size":2513,"mtime":1613748437691,"results":"76","hashOfConfig":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"188twpq",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"79"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1l22ato",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"111"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"111"},"/home/yarik/Documents/binary/react-stage1/part1/src/index.js",[],["162","163"],"/home/yarik/Documents/binary/react-stage1/part1/src/App.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Logo.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Chat.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Header.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/MessageList.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Message.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/MessageInput.js",["164","165"],"import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg:{\n        id: \"\",\n        text: \"\",\n        createdAt: \"\"\n      },\n      editedMsg:{\n        id: \"\",\n        text: \"\"\n      }\n    };\n  }\n  inputHandlerNew = (e) => {\n    const text = e.target.value.trim();\n    const id = uuidv4();\n    const date = new Date();\n    this.setState({\n      msg:{\n        text:text,\n        id: id,\n        createdAt: date.toString(),\n      }\n    });\n  };\n  inputHandlerEdit = (e) =>{\n    const text = e.target.value;\n    this.setState({\n      editedMsg:{\n        id:this.props.edtMsg.id,\n        text:text\n      }\n    });\n  };\n\n  sendText = () => {\n    if(this.state.msg.text){\n      this.props.addMessage(this.state.msg);\n      this.state.msg.text = \"\";\n    }\n  };\n\n  editText = () => {\n    this.props.editMessage(this.state.editedMsg);\n    this.state.editedMsg.text = \"\";\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"pad-lr_30px chat-msg_submit flex flex-vertCntr\">\n        {\n          this.props.editMessage\n          ?\n            <>\n              <input\n                className=\"chat-msg_input\"\n                type=\"text\"\n                name=\"message\"\n                placeholder={this.props.edtMsg.text[0].text}\n                onChange={(e) => this.inputHandlerEdit(e)}\n              />\n              <button className=\"chat-msg_button\" onClick={this.editText}>\n                Edit\n              </button>\n            </>\n          :\n          <>\n            <input\n              className=\"chat-msg_input\"\n              type=\"text\"\n              name=\"message\"\n              placeholder=\"Message\"\n              value={this.state.msg.text}\n              onChange={(e) => this.inputHandlerNew(e)}\n            />\n            <button className=\"chat-msg_button\" onClick={this.sendText}>\n              Send\n            </button>\n          </>\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MessageInput;\n","/home/yarik/Documents/binary/react-stage1/part1/src/components/animatedElem/Spiner.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Avatar.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Like.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Delete.js",[],["166","167"],"/home/yarik/Documents/binary/react-stage1/part1/src/components/helpers/Edit.js",[],"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Time.js",["168","169"],"import React from \"react\";\n\nfunction helper(text,cls){\n  return (\n        <div className=\"flex flex-horCntr pad-t_30px\">\n          <div className={`flex flex-centered ${cls}`}>\n            <h3>{text}</h3>\n          </div>\n        </div>\n      );\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date()\n    .toLocaleDateString()\n    .split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt)\n    .toLocaleDateString()\n    .split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt)\n    .toDateString()\n    .split(\" \");\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\",props.cls)\n    }\n    if( todayYear !== yearNmb ){\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`, props.cls)\n    }\n    if( todayMonth !== monthNmb){\n      return helper(`${date} ${month}`, props.cls)\n    }\n  } else {\n    return null;\n  }\n}\n","/home/yarik/Documents/binary/react-stage1/part2/src/index.js",[],["170","171"],"/home/yarik/Documents/binary/react-stage1/part2/src/App.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Logo.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Chat.js",["172"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { addFetchedMessage, deleteMessage, showEdit } from \"../actions/messageActions\";\nimport { changeHeaderData } from \"../actions/headerActions\";\n\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Modal from \"./Modal\";\nimport Spiner from \"../animatedElem/Spiner\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"0\",\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar:\n          \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\",\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    };\n  }\n  \n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.props.addFetchedMessage(data);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"pad-lr_chat\">\n        <Modal />\n        <Header roomInfo={this.props.headerInform} />\n        <div className=\"chat-messageWndw marg-t_20px\">\n          {this.props.messages.length !== 0 ? (\n            <MessageList\n              messages={this.props.messages}\n              myId={this.props.myInform.userId}\n              deleteMessage={this.props.deleteMessage}\n              clickToEdit={this.props.showEdit}\n            />\n          ) : (\n            <Spiner />\n          )}\n        </div>\n        <MessageInput addMessage={this.props.addMessage} />\n      </div>\n    );\n  }\n}\n\nChat.propTypes = {\n  messages: PropTypes.array,\n  myInform: PropTypes.object,\n  headerInform: PropTypes.object,\n  addFetchedMessage: PropTypes.func,\n  deleteMessages: PropTypes.func,\n  showEdit:PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.chat.messages,\n    myInform: state.chat.myInform,\n    headerInform: state.header,\n  };\n};\nconst mapDispatchToProps = {\n  addFetchedMessage,\n  deleteMessage,\n  showEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Header.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageList.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageInput.js",["173"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { addMessage, showEdit } from \"../actions/messageActions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: {\n        id: \"\",\n        text: \"\",\n        createdAt: \"\",\n      },\n      editedMsg: {\n        id: \"\",\n        text: \"\",\n      },\n    };\n  }\n  inputHandlerNew = (e) => {\n    const text = e.target.value.trim();\n    const id = uuidv4();\n    const date = new Date();\n    this.setState({\n      msg: {\n        text: text,\n        id: id,\n        createdAt: date.toString(),\n      },\n    });\n  };\n\n  sendText = () => {\n    if (this.state.msg.text) {\n      this.props.addMessage(this.state.msg);\n      this.state.msg.text = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"pad-lr_30px chat-msg_submit flex flex-vertCntr\">\n          <input\n            className=\"chat-msg_input\"\n            type=\"text\"\n            name=\"message\"\n            placeholder=\"Message\"\n            value={this.state.msg.text}\n            onChange={(e) => this.inputHandlerNew(e)}\n          />\n          <button className=\"chat-msg_button\" onClick={this.sendText}>\n            Send\n          </button>\n          <button className=\"chat-msg_button editButton_size\" onClick={()=>this.props.showEdit()}>&#11014;</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageInput.propTypes = {\n  messages: PropTypes.array,\n  addMessage: PropTypes.func,\n  showEdit: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.chat.messages,\n  };\n};\nconst mapDispatchToProps = {\n  addMessage,\n  showEdit\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInput);\n","/home/yarik/Documents/binary/react-stage1/part2/src/components/animatedElem/Spiner.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Message.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Time.js",["174","175"],"import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction helper(text,cls){\n  return (\n        <div className=\"flex flex-horCntr pad-t_30px\">\n          <div className={`flex flex-centered ${cls}`}>\n            <h3>{text}</h3>\n          </div>\n        </div>\n      );\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date()\n    .toLocaleDateString()\n    .split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt)\n    .toLocaleDateString()\n    .split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt)\n    .toDateString()\n    .split(\" \");\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\",props.cls)\n    }\n    if( todayYear !== yearNmb ){\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`, props.cls)\n    }\n    if( todayMonth !== monthNmb){\n      return helper(`${date} ${month}`, props.cls)\n    }\n  } else {\n    return null;\n  }\n}\n\nTime.propTypes = {\n  prevDate: PropTypes.string,\n  cls: PropTypes.string,\n  data: PropTypes.object\n};","/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Avatar.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Like.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Delete.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/helpers/Edit.js",[],["176","177"],"/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/mainReducer.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/headerReducer.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/actionsType.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/messageActions.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/actions/headerActions.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Modal.js",["178"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { hideEdit, editMessage } from \"../actions/messageActions\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editedMsg: {\n        id: \"\",\n        text: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      editedMsg: {\n        id: \"\",\n        text: this.props.editMsg.text,\n      },\n    });\n  }\n\n  inputHandlerEdit = (e) => {\n    const text = e.target.value;\n    this.setState({\n      editedMsg: {\n        id: this.props.editMsg.id,\n        text: text,\n      },\n    });\n  };\n\n  editText = () => {\n    this.props.editMessage(this.state.editedMsg);\n    this.props.hideEdit();\n    this.state.editedMsg.text = \"\";\n  };\n  render() {\n    if (this.props.editMsg) {\n      if (this.props.editMsg.editMsg) {\n        return (\n          <div className=\"modal flex flex-drctCol flex-vertCntr flex-spcarrnd flex-horCntr\">\n            <h2>Edit message</h2>\n            <input\n              className=\"editMsg-input\"\n              type=\"textarea\"\n              name=\"Edit message\"\n              placeholder={this.props.editMsg.text}\n              onChange={(e) => this.inputHandlerEdit(e)}\n            />\n            <div className=\"editMsg-buttonDiv flex flex-vertCntr flex-spcbtwn \">\n              <button\n                className=\"editMsg-button chat-msg_button\"\n                type=\"button\"\n                onClick={this.editText}\n              >\n                Ok\n              </button>\n              <button\n                className=\"editMsg-button chat-msg_button\"\n                type=\"button\"\n                onClick={this.props.hideEdit}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nModal.propTypes = {\n  editMsg: PropTypes.object,\n  hideEdit: PropTypes.func,\n  editMessage: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    editMsg: state.chat.editMsg,\n  };\n};\nconst mapDispatchToProps = {\n  hideEdit,\n  editMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MyMessage.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/OtherMessage.js",[],"/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/chatReducer.js",["179"],"import {\n  ADD_NEW_MESSAGE,\n  FETCHED_MESSAGES,\n  DELETE_MESSAGE,\n  SHOW_EDIT,\n  HIDE_EDIT,\n  EDIT_MESSAGE,\n} from \"../actions/actionsType\";\nconst initialState = {\n  messages: [],\n  myInform: {\n    userId: \"61325\",\n    avatar:\n      \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n    user: \"Yaroslav\",\n  },\n  editMsg: {\n    id: \"\",\n    editMsg: false,\n    text: \"\",\n  },\n};\n\nexport function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      const message = {\n        id: action.payload.id,\n        userId: state.myInform.userId,\n        avatar: state.myInform.avatar,\n        user: state.myInform.user,\n        text: action.payload.text,\n        createdAt: action.payload.createdAt,\n        editedAt: \"\",\n      };\n      return { ...state, messages: [...state.messages, message] };\n\n    case FETCHED_MESSAGES:\n      return { ...state, messages: [...state.messages, ...action.payload] };\n\n    case DELETE_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.filter(\n          (message) => message.id !== action.payload\n        ),\n      };\n\n    case SHOW_EDIT:\n      console.log(action.payload);\n      if (action.payload) {\n        const text = state.messages.filter(\n          (message) => message.id === action.payload\n        );\n        return {\n          ...state,\n          editMsg: { id: action.payload, editMsg: true, text: text[0].text },\n        };\n      } else {\n        const myMessage = state.messages.filter(\n          (message) => state.myInform.userId === message.userId\n        );\n        const lastMessage = myMessage[myMessage.length - 1];\n        if (lastMessage) {\n          return {\n            ...state,\n            editMsg: {\n              id: lastMessage.id,\n              editMsg: true,\n              text: lastMessage.text,\n            },\n          };\n        } else {\n          alert(\n            \"You must write message first!\\nThis button for edit last message!\"\n          );\n        }\n      }\n\n    case HIDE_EDIT:\n      return { ...state, editMsg: { id: \"\", editMsg: false, text: \"\" } };\n\n    case EDIT_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) => {\n          if (message.id === action.payload.id) {\n            message.text = action.payload.text;\n            message.editedAt = new Date().toString();\n          }\n          return message;\n        }),\n      };\n\n    default:\n      return state;\n  }\n}\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":44,"column":7,"nodeType":"186","endLine":44,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":50,"column":5,"nodeType":"186","endLine":50,"endColumn":25},{"ruleId":"180","replacedBy":"187"},{"ruleId":"182","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":16,"column":8,"nodeType":"191","messageId":"192","endLine":16,"endColumn":16},{"ruleId":"189","severity":1,"message":"193","line":22,"column":21,"nodeType":"191","messageId":"192","endLine":22,"endColumn":25},{"ruleId":"180","replacedBy":"194"},{"ruleId":"182","replacedBy":"195"},{"ruleId":"189","severity":1,"message":"196","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":38,"column":7,"nodeType":"186","endLine":38,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":17,"column":8,"nodeType":"191","messageId":"192","endLine":17,"endColumn":16},{"ruleId":"189","severity":1,"message":"193","line":23,"column":21,"nodeType":"191","messageId":"192","endLine":23,"endColumn":25},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"184","severity":1,"message":"185","line":39,"column":5,"nodeType":"186","endLine":39,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":80,"column":5,"nodeType":"201","messageId":"202","endLine":81,"endColumn":74},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["203"],["204"],"no-unused-vars","'todayDay' is assigned a value but never used.","Identifier","unusedVar","'year' is assigned a value but never used.",["203"],["204"],"'changeHeaderData' is defined but never used.",["203"],["204"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]