{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageInput.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMessage } from '../actions/messageActions';\nimport { changeHeaderData } from '../actions/headerActions';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputHandlerNew = e => {\n      const text = e.target.value.trim();\n      const id = uuidv4();\n      const date = new Date();\n      this.setState({\n        msg: {\n          text: text,\n          id: id,\n          createdAt: date.toString()\n        }\n      });\n    };\n\n    this.sendText = () => {\n      this.props.changeHeaderData(this.props.messages);\n\n      if (this.state.msg.text) {\n        this.props.addMessage(this.state.msg);\n        this.state.msg.text = \"\";\n      }\n    };\n\n    this.state = {\n      msg: {\n        id: \"\",\n        text: \"\",\n        createdAt: \"\"\n      },\n      editedMsg: {\n        id: \"\",\n        text: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pad-lr_30px chat-msg_submit flex flex-vertCntr\",\n        children: this.props.editMessage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-msg_input\",\n            type: \"text\",\n            name: \"message\",\n            placeholder: this.props.edtMsg.text[0].text,\n            onChange: e => this.inputHandlerEdit(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-msg_button\",\n            onClick: this.editText,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-msg_input\",\n            type: \"text\",\n            name: \"message\",\n            placeholder: \"Message\",\n            value: this.state.msg.text,\n            onChange: e => this.inputHandlerNew(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-msg_button\",\n            onClick: this.sendText,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.chat.messages\n  };\n};\n\nconst mapDispatchToProps = {\n  addMessage,\n  changeHeaderData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInput);","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageInput.js"],"names":["React","Component","connect","addMessage","changeHeaderData","v4","uuidv4","MessageInput","constructor","props","inputHandlerNew","e","text","target","value","trim","id","date","Date","setState","msg","createdAt","toString","sendText","messages","state","editedMsg","render","editMessage","edtMsg","inputHandlerEdit","editText","mapStateToProps","chat","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {addMessage} from '../actions/messageActions';\nimport {changeHeaderData} from '../actions/headerActions'\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg:{\n        id: \"\",\n        text: \"\",\n        createdAt: \"\"\n      },\n      editedMsg:{\n        id: \"\",\n        text: \"\"\n      }\n    };\n  }\n  inputHandlerNew = (e) => {\n    const text = e.target.value.trim();\n    const id = uuidv4();\n    const date = new Date();\n    this.setState({\n      msg:{\n        text:text,\n        id: id,\n        createdAt: date.toString(),\n      }\n    });\n  };\n\n  sendText = () => {\n    this.props.changeHeaderData(this.props.messages)\n    if(this.state.msg.text){\n      this.props.addMessage(this.state.msg);\n      this.state.msg.text = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"pad-lr_30px chat-msg_submit flex flex-vertCntr\">\n        {\n          this.props.editMessage\n          ?\n            <>\n              <input\n                className=\"chat-msg_input\"\n                type=\"text\"\n                name=\"message\"\n                placeholder={this.props.edtMsg.text[0].text}\n                onChange={(e) => this.inputHandlerEdit(e)}\n              />\n              <button className=\"chat-msg_button\" onClick={this.editText}>\n                Edit\n              </button>\n            </>\n          :\n          <>\n            <input\n              className=\"chat-msg_input\"\n              type=\"text\"\n              name=\"message\"\n              placeholder=\"Message\"\n              value={this.state.msg.text}\n              onChange={(e) => this.inputHandlerNew(e)}\n            />\n            <button className=\"chat-msg_button\" onClick={this.sendText}>\n              Send\n            </button>\n          </>\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    messages: state.chat.messages\n  }\n}\nconst mapDispatchToProps = {\n  addMessage,\n  changeHeaderData\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MessageInput);\n"]},"metadata":{},"sourceType":"module"}