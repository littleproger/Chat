{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Message.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport MyMessage from \"./MyMessage\";\nimport OtherMessage from \"./OtherMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message(props) {\n  let [hour, minute] = \"\";\n  let newMsg = true;\n\n  if (props.data.editedAt) {\n    [hour, minute] = new Date(props.data.editedAt).toLocaleTimeString().split(\":\");\n    newMsg = false;\n  } else {\n    [hour, minute] = new Date(props.data.createdAt).toLocaleTimeString().split(\":\");\n  }\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.data.userId === props.myId ? /*#__PURE__*/_jsxDEV(MyMessage, {\n      clickToEdit: props.clickToEdit,\n      deleteMessage: props.deleteMessage,\n      time: {\n        hour,\n        minute\n      },\n      newMsg: newMsg,\n      data: props.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(OtherMessage, {\n      time: {\n        hour,\n        minute\n      },\n      newMsg: newMsg,\n      data: props.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Message;\nMessage.propTypes = {\n  myId: PropTypes.string,\n  data: PropTypes.object,\n  clickToEdit: PropTypes.func,\n  deleteMessage: PropTypes.func\n};\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Message.js"],"names":["React","PropTypes","MyMessage","OtherMessage","Message","props","hour","minute","newMsg","data","editedAt","Date","toLocaleTimeString","split","createdAt","console","log","userId","myId","clickToEdit","deleteMessage","propTypes","string","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAI,CAACC,IAAD,EAAOC,MAAP,IAAiB,EAArB;AACA,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIH,KAAK,CAACI,IAAN,CAAWC,QAAf,EAAyB;AACvB,KAACJ,IAAD,EAAOC,MAAP,IAAiB,IAAII,IAAJ,CAASN,KAAK,CAACI,IAAN,CAAWC,QAApB,EACdE,kBADc,GAEdC,KAFc,CAER,GAFQ,CAAjB;AAGAL,IAAAA,MAAM,GAAG,KAAT;AACD,GALD,MAKO;AACL,KAACF,IAAD,EAAOC,MAAP,IAAiB,IAAII,IAAJ,CAASN,KAAK,CAACI,IAAN,CAAWK,SAApB,EACdF,kBADc,GAEdC,KAFc,CAER,GAFQ,CAAjB;AAGD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,sBACE;AAAA,cACGA,KAAK,CAACI,IAAN,CAAWQ,MAAX,KAAsBZ,KAAK,CAACa,IAA5B,gBACC,QAAC,SAAD;AACE,MAAA,WAAW,EAAEb,KAAK,CAACc,WADrB;AAEE,MAAA,aAAa,EAAEd,KAAK,CAACe,aAFvB;AAGE,MAAA,IAAI,EAAE;AAAEd,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAHR;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,IAAI,EAAEH,KAAK,CAACI;AALd;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,YAAD;AACE,MAAA,IAAI,EAAE;AAAEH,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OADR;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,IAAI,EAAEH,KAAK,CAACI;AAHd;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KAlCQL,O;AAoCTA,OAAO,CAACiB,SAAR,GAAoB;AAClBH,EAAAA,IAAI,EAAEjB,SAAS,CAACqB,MADE;AAElBb,EAAAA,IAAI,EAAER,SAAS,CAACsB,MAFE;AAGlBJ,EAAAA,WAAW,EAAElB,SAAS,CAACuB,IAHL;AAIlBJ,EAAAA,aAAa,EAAEnB,SAAS,CAACuB;AAJP,CAApB;AAOA,eAAepB,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport MyMessage from \"./MyMessage\";\nimport OtherMessage from \"./OtherMessage\";\n\nfunction Message(props) {\n  let [hour, minute] = \"\";\n  let newMsg = true;\n  if (props.data.editedAt) {\n    [hour, minute] = new Date(props.data.editedAt)\n      .toLocaleTimeString()\n      .split(\":\");\n    newMsg = false;\n  } else {\n    [hour, minute] = new Date(props.data.createdAt)\n      .toLocaleTimeString()\n      .split(\":\");\n  }\n  console.log(props);\n\n  return (\n    <div>\n      {props.data.userId === props.myId ? (\n        <MyMessage\n          clickToEdit={props.clickToEdit}\n          deleteMessage={props.deleteMessage}\n          time={{ hour, minute }}\n          newMsg={newMsg}\n          data={props.data}\n        />\n      ) : (\n        <OtherMessage\n          time={{ hour, minute }}\n          newMsg={newMsg}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  myId: PropTypes.string,\n  data: PropTypes.object,\n  clickToEdit: PropTypes.func,\n  deleteMessage: PropTypes.func\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}