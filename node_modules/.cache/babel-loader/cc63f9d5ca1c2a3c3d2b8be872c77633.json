{"ast":null,"code":"import { ADD_NEW_MESSAGE, FETCHED_MESSAGES, DELETE_MESSAGE, SHOW_EDIT, HIDE_EDIT, EDIT_MESSAGE } from \"../actions/actionsType\";\nconst initialState = {\n  messages: [],\n  myInform: {\n    userId: \"61325\",\n    avatar: \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n    user: \"Yaroslav\"\n  },\n  editMsg: {\n    id: \"\",\n    editMsg: false,\n    text: \"\"\n  }\n};\nexport function messageReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      const message = {\n        id: action.payload.id,\n        userId: state.myInform.userId,\n        avatar: state.myInform.avatar,\n        user: state.myInform.user,\n        text: action.payload.text,\n        createdAt: action.payload.createdAt,\n        editedAt: \"\"\n      };\n      return { ...state,\n        messages: [...state.messages, message]\n      };\n\n    case FETCHED_MESSAGES:\n      return { ...state,\n        messages: [...state.messages, ...action.payload]\n      };\n\n    case DELETE_MESSAGE:\n      return { ...state,\n        messages: state.messages.filter(message => message.id !== action.payload)\n      };\n\n    case SHOW_EDIT:\n      return { ...state,\n        editMsg: {\n          id: action.payload.id,\n          editMsg: true,\n          text: action.payload.text\n        }\n      };\n\n    case HIDE_EDIT:\n      return { ...state,\n        editMsg: {\n          id: \"\",\n          editMsg: false,\n          text: \"\"\n        }\n      };\n\n    case EDIT_MESSAGE:\n      return;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/reducers/messageReducer.js"],"names":["ADD_NEW_MESSAGE","FETCHED_MESSAGES","DELETE_MESSAGE","SHOW_EDIT","HIDE_EDIT","EDIT_MESSAGE","initialState","messages","myInform","userId","avatar","user","editMsg","id","text","messageReducer","state","action","type","message","payload","createdAt","editedAt","filter"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,gBAA1B,EAA4CC,cAA5C,EAA4DC,SAA5D,EAAuEC,SAAvE,EAAkFC,YAAlF,QAAsG,wBAAtG;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,OADA;AAERC,IAAAA,MAAM,EACJ,8GAHM;AAIRC,IAAAA,IAAI,EAAE;AAJE,GAFS;AAQnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,EAAE,EAAE,EADG;AAEPD,IAAAA,OAAO,EAAE,KAFF;AAGPE,IAAAA,IAAI,EAAE;AAHC;AARU,CAArB;AAeA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGV,YAAhC,EAA8CW,MAA9C,EAAsD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,eAAL;AACI,YAAMmB,OAAO,GAAG;AACZN,QAAAA,EAAE,EAAEI,MAAM,CAACG,OAAP,CAAeP,EADP;AAEZJ,QAAAA,MAAM,EAAEO,KAAK,CAACR,QAAN,CAAeC,MAFX;AAGZC,QAAAA,MAAM,EAAEM,KAAK,CAACR,QAAN,CAAeE,MAHX;AAIZC,QAAAA,IAAI,EAAEK,KAAK,CAACR,QAAN,CAAeG,IAJT;AAKZG,QAAAA,IAAI,EAAEG,MAAM,CAACG,OAAP,CAAeN,IALT;AAMZO,QAAAA,SAAS,EAAEJ,MAAM,CAACG,OAAP,CAAeC,SANd;AAOZC,QAAAA,QAAQ,EAAE;AAPE,OAAhB;AASF,aAAO,EAAC,GAAGN,KAAJ;AAAWT,QAAAA,QAAQ,EAAC,CAAC,GAAGS,KAAK,CAACT,QAAV,EAAoBY,OAApB;AAApB,OAAP;;AAEF,SAAKlB,gBAAL;AACE,aAAO,EAAC,GAAGe,KAAJ;AAAWT,QAAAA,QAAQ,EAAC,CAAC,GAAGS,KAAK,CAACT,QAAV,EAAoB,GAAGU,MAAM,CAACG,OAA9B;AAApB,OAAP;;AAEF,SAAKlB,cAAL;AACE,aAAO,EAAC,GAAGc,KAAJ;AAAWT,QAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAegB,MAAf,CAAuBJ,OAAD,IAAaA,OAAO,CAACN,EAAR,KAAeI,MAAM,CAACG,OAAzD;AAArB,OAAP;;AACF,SAAKjB,SAAL;AACE,aAAO,EAAC,GAAGa,KAAJ;AAAWJ,QAAAA,OAAO,EAAE;AAACC,UAAAA,EAAE,EAACI,MAAM,CAACG,OAAP,CAAeP,EAAnB;AAAuBD,UAAAA,OAAO,EAAC,IAA/B;AAAqCE,UAAAA,IAAI,EAACG,MAAM,CAACG,OAAP,CAAeN;AAAzD;AAApB,OAAP;;AACF,SAAKV,SAAL;AACE,aAAO,EAAC,GAAGY,KAAJ;AAAWJ,QAAAA,OAAO,EAAE;AAACC,UAAAA,EAAE,EAAC,EAAJ;AAAQD,UAAAA,OAAO,EAAC,KAAhB;AAAuBE,UAAAA,IAAI,EAAC;AAA5B;AAApB,OAAP;;AACF,SAAKT,YAAL;AACE;;AAEF;AACE,aAAOW,KAAP;AA1BJ;AA4BD","sourcesContent":["import { ADD_NEW_MESSAGE, FETCHED_MESSAGES, DELETE_MESSAGE, SHOW_EDIT, HIDE_EDIT, EDIT_MESSAGE } from \"../actions/actionsType\";\nconst initialState = {\n  messages: [],\n  myInform: {\n    userId: \"61325\",\n    avatar:\n      \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n    user: \"Yaroslav\",\n  },\n  editMsg: {\n    id: \"\",\n    editMsg: false,\n    text: \"\",\n  },\n};\n\nexport function messageReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n        const message = {\n            id: action.payload.id,\n            userId: state.myInform.userId,\n            avatar: state.myInform.avatar,\n            user: state.myInform.user,\n            text: action.payload.text,\n            createdAt: action.payload.createdAt,\n            editedAt: \"\"\n        };\n      return {...state, messages:[...state.messages, message]};\n\n    case FETCHED_MESSAGES:\n      return {...state, messages:[...state.messages, ...action.payload]};\n    \n    case DELETE_MESSAGE:\n      return {...state, messages: state.messages.filter((message) => message.id !== action.payload)};\n    case SHOW_EDIT:\n      return {...state, editMsg: {id:action.payload.id, editMsg:true, text:action.payload.text}};\n    case HIDE_EDIT:\n      return {...state, editMsg: {id:\"\", editMsg:false, text:\"\"}}\n    case EDIT_MESSAGE:\n      return \n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}