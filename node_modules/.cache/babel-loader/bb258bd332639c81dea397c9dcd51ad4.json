{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Chat.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addFetchedMessage, deleteMessage } from \"../actions/messageActions\";\nimport { changeHeaderData } from \"../actions/headerActions\";\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Spiner from \"../animatedElem/Spiner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editMessage = ({\n      id,\n      text\n    }) => {\n      this.setState({\n        messages: this.state.messages.map(message => {\n          if (message.id === id) {\n            message.text = text;\n            message.editedAt = new Date().toString();\n          }\n\n          return message;\n        }),\n        edtMsg: {\n          id: \"\",\n          editMsg: false,\n          text: \"\"\n        }\n      });\n    };\n\n    this.clickToEdit = id => {\n      const text = this.state.messages.filter(message => message.id === id);\n      this.setState({\n        edtMsg: {\n          id,\n          editMsg: true,\n          text\n        }\n      });\n    };\n\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"0\"\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar: \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\"\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\"\n      }\n    };\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps !== this.state.props) {\n      console.log(\"TCTYBHJ\");\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\").then(response => response.json()).then(data => {\n      this.props.addFetchedMessage(data);\n    });\n  }\n\n  render() {\n    console.log(this.props.headerInform);\n    const data = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pad-lr_chat\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        roomInfo: this.props.headerInform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messageWndw marg-t_20px\",\n        children: this.props.messages.length !== 0 ? /*#__PURE__*/_jsxDEV(MessageList, {\n          messages: this.props.messages,\n          myId: data.myInform.userId,\n          deleteMessage: this.props.deleteMessage,\n          clickToEdit: this.clickToEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        addMessage: this.props.addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.chat.messages,\n    headerInform: state.header\n  };\n};\n\nconst mapDispatchToProps = {\n  addFetchedMessage,\n  deleteMessage,\n  changeHeaderData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Chat.js"],"names":["React","Component","connect","addFetchedMessage","deleteMessage","changeHeaderData","Header","MessageList","MessageInput","Spiner","Chat","constructor","props","editMessage","id","text","setState","messages","state","map","message","editedAt","Date","toString","edtMsg","editMsg","clickToEdit","filter","roomInform","roomName","numberUsers","numberMessages","lastMessageDate","myInform","userId","avatar","user","componentWillUpdate","nextProps","console","log","componentDidMount","fetch","then","response","json","data","render","headerInform","length","addMessage","mapStateToProps","chat","header","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addFetchedMessage, deleteMessage } from \"../actions/messageActions\";\nimport { changeHeaderData } from \"../actions/headerActions\";\n\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Spiner from \"../animatedElem/Spiner\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"0\",\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar:\n          \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\",\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    };\n  }\n  componentWillUpdate(nextProps){\n    if(nextProps !== this.state.props){\n      console.log(\"TCTYBHJ\")\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.props.addFetchedMessage(data);\n      });\n  }\n\n  editMessage = ({ id, text }) => {\n    this.setState({\n      messages: this.state.messages.map((message) => {\n        if (message.id === id) {\n          message.text = text;\n          message.editedAt = new Date().toString();\n        }\n        return message;\n      }),\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    });\n  };\n\n  clickToEdit = (id) => {\n    const text = this.state.messages.filter((message) => message.id === id);\n    this.setState({\n      edtMsg: {\n        id,\n        editMsg: true,\n        text,\n      },\n    });\n  };\n\n  render() {\n    console.log(this.props.headerInform)\n    const data = this.state;\n    return (\n      <div className=\"pad-lr_chat\">\n        <Header roomInfo={this.props.headerInform} />\n        <div className=\"chat-messageWndw marg-t_20px\">\n          {this.props.messages.length !== 0 ? (\n            <MessageList\n              messages={this.props.messages}\n              myId={data.myInform.userId}\n              deleteMessage={this.props.deleteMessage}\n              clickToEdit={this.clickToEdit}\n            />\n          ) : (\n            <Spiner />\n          )}\n        </div>\n        <MessageInput addMessage={this.props.addMessage} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.chat.messages,\n    headerInform: state.header,\n  };\n};\nconst mapDispatchToProps = {\n  addFetchedMessage,\n  deleteMessage,\n  changeHeaderData,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}