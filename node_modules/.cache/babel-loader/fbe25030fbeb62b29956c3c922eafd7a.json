{"ast":null,"code":"import _slicedToArray from\"/home/yarik/Documents/binary/react-stage1/part2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";function helper(text,cls){return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-horCntr pad-t_30px\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-centered \".concat(cls),children:/*#__PURE__*/_jsx(\"h3\",{children:text})})});}export default function Time(props){var today=new Date().toLocaleDateString();var timeMessage=new Date(props.data.createdAt).toLocaleDateString();var _Date$toLocaleDateStr=new Date().toLocaleDateString().split(\".\"),_Date$toLocaleDateStr2=_slicedToArray(_Date$toLocaleDateStr,3),todayDay=_Date$toLocaleDateStr2[0],todayMonth=_Date$toLocaleDateStr2[1],todayYear=_Date$toLocaleDateStr2[2];var _Date$toLocaleDateStr3=new Date(props.data.createdAt).toLocaleDateString().split(\".\"),_Date$toLocaleDateStr4=_slicedToArray(_Date$toLocaleDateStr3,3),dateNmb=_Date$toLocaleDateStr4[0],monthNmb=_Date$toLocaleDateStr4[1],yearNmb=_Date$toLocaleDateStr4[2];var _Date$toDateString$sp=new Date(props.data.createdAt).toDateString().split(\" \"),_Date$toDateString$sp2=_slicedToArray(_Date$toDateString$sp,3),date=_Date$toDateString$sp2[0],month=_Date$toDateString$sp2[1],year=_Date$toDateString$sp2[2];if(props.prevDate!==timeMessage){if(timeMessage===today){return helper(\"Today\",props.cls);}if(todayYear!==yearNmb){return helper(\"\".concat(dateNmb,\" \").concat(monthNmb,\" \").concat(yearNmb),props.cls);}if(todayMonth!==monthNmb){return helper(\"\".concat(date,\" \").concat(month),props.cls);}}else{return null;}}","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/Time.js"],"names":["React","helper","text","cls","Time","props","today","Date","toLocaleDateString","timeMessage","data","createdAt","split","todayDay","todayMonth","todayYear","dateNmb","monthNmb","yearNmb","toDateString","date","month","year","prevDate"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAqBC,GAArB,CAAyB,CACvB,mBACM,YAAK,SAAS,CAAC,8BAAf,uBACE,YAAK,SAAS,8BAAwBA,GAAxB,CAAd,uBACE,oBAAKD,IAAL,EADF,EADF,EADN,CAOD,CAED,cAAe,SAASE,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAClC,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EAAd,CACA,GAAMC,CAAAA,WAAW,CAAG,GAAIF,CAAAA,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EAA+BH,kBAA/B,EAApB,CAFkC,0BAGM,GAAID,CAAAA,IAAJ,GACrCC,kBADqC,GAErCI,KAFqC,CAE/B,GAF+B,CAHN,gEAG7BC,QAH6B,2BAGnBC,UAHmB,2BAGPC,SAHO,sDAMC,GAAIR,CAAAA,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EAChCH,kBADgC,GAEhCI,KAFgC,CAE1B,GAF0B,CAND,iEAM7BI,OAN6B,2BAMpBC,QANoB,2BAMVC,OANU,qDASR,GAAIX,CAAAA,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EACvBQ,YADuB,GAEvBP,KAFuB,CAEjB,GAFiB,CATQ,gEAS7BQ,IAT6B,2BASvBC,KATuB,2BAShBC,IATgB,2BAYlC,GAAIjB,KAAK,CAACkB,QAAN,GAAmBd,WAAvB,CAAoC,CAClC,GAAIA,WAAW,GAAKH,KAApB,CAA2B,CACzB,MAAOL,CAAAA,MAAM,CAAC,OAAD,CAASI,KAAK,CAACF,GAAf,CAAb,CACD,CACD,GAAIY,SAAS,GAAKG,OAAlB,CAA2B,CACzB,MAAOjB,CAAAA,MAAM,WAAIe,OAAJ,aAAeC,QAAf,aAA2BC,OAA3B,EAAsCb,KAAK,CAACF,GAA5C,CAAb,CACD,CACD,GAAIW,UAAU,GAAKG,QAAnB,CAA4B,CAC1B,MAAOhB,CAAAA,MAAM,WAAImB,IAAJ,aAAYC,KAAZ,EAAqBhB,KAAK,CAACF,GAA3B,CAAb,CACD,CACF,CAVD,IAUO,CACL,MAAO,KAAP,CACD,CACF","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction helper(text,cls){\n  return (\n        <div className=\"flex flex-horCntr pad-t_30px\">\n          <div className={`flex flex-centered ${cls}`}>\n            <h3>{text}</h3>\n          </div>\n        </div>\n      );\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date()\n    .toLocaleDateString()\n    .split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt)\n    .toLocaleDateString()\n    .split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt)\n    .toDateString()\n    .split(\" \");\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\",props.cls)\n    }\n    if( todayYear !== yearNmb ){\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`, props.cls)\n    }\n    if( todayMonth !== monthNmb){\n      return helper(`${date} ${month}`, props.cls)\n    }\n  } else {\n    return null;\n  }\n}\n\nTime.propTypes = {\n  prevDate: PropTypes.string,\n  cls: PropTypes.string,\n  data: PropTypes.object\n};"]},"metadata":{},"sourceType":"module"}