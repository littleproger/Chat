{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Time.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction helper(text) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-horCntr pad-t_30px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date().toLocaleDateString().split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt).toLocaleDateString().split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt).toDateString().split(\" \");\n\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\");\n    }\n\n    if (todayYear !== yearNmb) {\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`);\n    }\n\n    if (todayMonth !== monthNmb) {\n      return helper(`${date} ${month}`);\n    }\n  } else {\n    return null;\n  }\n}\n_c = Time;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Time.js"],"names":["React","helper","text","Time","props","today","Date","toLocaleDateString","timeMessage","data","createdAt","todayDay","todayMonth","todayYear","split","dateNmb","monthNmb","yearNmb","date","month","year","toDateString","prevDate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAqB;AACnB,sBACM;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADN;AAOD;;AAED,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;AACA,QAAMC,WAAW,GAAG,IAAIF,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EAA+BH,kBAA/B,EAApB;AACA,MAAI,CAACI,QAAD,EAAWC,UAAX,EAAuBC,SAAvB,IAAoC,IAAIP,IAAJ,GACrCC,kBADqC,GAErCO,KAFqC,CAE/B,GAF+B,CAAxC;AAGA,MAAI,CAACC,OAAD,EAAUC,QAAV,EAAoBC,OAApB,IAA+B,IAAIX,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EAChCH,kBADgC,GAEhCO,KAFgC,CAE1B,GAF0B,CAAnC;AAGA,MAAI,CAACI,IAAD,EAAOC,KAAP,EAAcC,IAAd,IAAsB,IAAId,IAAJ,CAASF,KAAK,CAACK,IAAN,CAAWC,SAApB,EACvBW,YADuB,GAEvBP,KAFuB,CAEjB,GAFiB,CAA1B;;AAGA,MAAIV,KAAK,CAACkB,QAAN,KAAmBd,WAAvB,EAAoC;AAClC,QAAIA,WAAW,KAAKH,KAApB,EAA2B;AACzB,aAAOJ,MAAM,CAAC,OAAD,CAAb;AACD;;AACD,QAAIY,SAAS,KAAKI,OAAlB,EAA2B;AACzB,aAAOhB,MAAM,CAAE,GAAEc,OAAQ,IAAGC,QAAS,IAAGC,OAAQ,EAAnC,CAAb;AACD;;AACD,QAAIL,UAAU,KAAKI,QAAnB,EAA4B;AAC1B,aAAOf,MAAM,CAAE,GAAEiB,IAAK,IAAGC,KAAM,EAAlB,CAAb;AACD;AACF,GAVD,MAUO;AACL,WAAO,IAAP;AACD;AACF;KAzBuBhB,I","sourcesContent":["import React from \"react\";\n\nfunction helper(text){\n  return (\n        <div className=\"flex flex-horCntr pad-t_30px\">\n          <div className=\"flex flex-centered\">\n            <h3>{text}</h3>\n          </div>\n        </div>\n      );\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date()\n    .toLocaleDateString()\n    .split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt)\n    .toLocaleDateString()\n    .split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt)\n    .toDateString()\n    .split(\" \");\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\")\n    }\n    if( todayYear !== yearNmb ){\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`)\n    }\n    if( todayMonth !== monthNmb){\n      return helper(`${date} ${month}`)\n    }\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}