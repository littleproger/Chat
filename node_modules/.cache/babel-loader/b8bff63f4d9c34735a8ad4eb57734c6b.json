{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageList.js\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { changeHeaderData } from \"../actions/headerActions\";\nimport React from \"react\";\nimport Message from \"./Message\";\nimport Time from './Time';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MessageList(props) {\n  let timeNow = new Date();\n  let prevDate = \"\";\n  let time;\n  props.changeHeaderData(props.messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-size flex-drctCol\",\n    children: props.messages.map(data => {\n      if (timeNow !== new Date(data.createdAt).toLocaleDateString()) {\n        time = /*#__PURE__*/_jsxDEV(Time, {\n          data: data,\n          prevDate: prevDate,\n          cls: \"date-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this);\n        prevDate = new Date(data.createdAt).toLocaleDateString();\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [time, /*#__PURE__*/_jsxDEV(Message, {\n          data: data,\n          myId: props.myId,\n          deleteMessage: props.deleteMessage,\n          clickToEdit: props.clickToEdit\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MessageList;\nconst mapDispatchToProps = {\n  changeHeaderData\n};\nexport default connect(null, mapDispatchToProps)(MessageList);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part2/src/components/Chat/MessageList.js"],"names":["connect","PropTypes","changeHeaderData","React","Message","Time","MessageList","props","timeNow","Date","prevDate","time","messages","map","data","createdAt","toLocaleDateString","myId","deleteMessage","clickToEdit","id","mapDispatchToProps"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,IAAJ;AAEAJ,EAAAA,KAAK,CAACL,gBAAN,CAAuBK,KAAK,CAACK,QAA7B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cAEIL,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC3B,UAAGN,OAAO,KAAK,IAAIC,IAAJ,CAASK,IAAI,CAACC,SAAd,EAAyBC,kBAAzB,EAAf,EAA6D;AAC3DL,QAAAA,IAAI,gBAAG,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEG,IAAZ;AAAkB,UAAA,QAAQ,EAAEJ,QAA5B;AAAsC,UAAA,GAAG,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAAP;AACAA,QAAAA,QAAQ,GAAG,IAAID,IAAJ,CAASK,IAAI,CAACC,SAAd,EAAyBC,kBAAzB,EAAX;AACD;;AACC,0BACA;AAAA,mBACKL,IADL,eAEI,QAAC,OAAD;AACI,UAAA,IAAI,EAAEG,IADV;AAEI,UAAA,IAAI,EAAEP,KAAK,CAACU,IAFhB;AAGI,UAAA,aAAa,EAAEV,KAAK,CAACW,aAHzB;AAII,UAAA,WAAW,EAAEX,KAAK,CAACY;AAJvB,WAKSL,IAAI,CAACM,EALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADA;AAYH,KAjBD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KA9BQd,W;AAgCT,MAAMe,kBAAkB,GAAG;AACzBnB,EAAAA;AADyB,CAA3B;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCf,WAAlC,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { changeHeaderData } from \"../actions/headerActions\";\nimport React from \"react\";\nimport Message from \"./Message\";\nimport Time from './Time';\n\nfunction MessageList(props) {\n  let timeNow = new Date();\n  let prevDate = \"\";\n  let time;\n\n  props.changeHeaderData(props.messages)\n  return (\n    <div className=\"full-size flex-drctCol\">\n      {\n        props.messages.map((data) => {\n          if(timeNow !== new Date(data.createdAt).toLocaleDateString()){\n            time = <Time data={data} prevDate={prevDate} cls={\"date-block\"}/>\n            prevDate = new Date(data.createdAt).toLocaleDateString();\n          }\n            return (\n            <>\n                {time}\n                <Message\n                    data={data}\n                    myId={props.myId}\n                    deleteMessage={props.deleteMessage}\n                    clickToEdit={props.clickToEdit}\n                    key={data.id}\n                />\n            </>\n            );\n        })\n      }\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  changeHeaderData,\n};\n\nexport default connect(null, mapDispatchToProps)(MessageList);\n"]},"metadata":{},"sourceType":"module"}