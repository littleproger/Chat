{"ast":null,"code":"var _jsxFileName = \"/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Chat.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Spiner from \"../animatedElem/Spiner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHeader = () => {\n      const allUserId = this.state.messages.map(msg => {\n        return msg.userId;\n      });\n      const messagesLength = this.state.messages.length;\n      const users = new Set(allUserId);\n      const createdAt = new Date(this.state.messages[messagesLength - 1].createdAt).toLocaleDateString();\n      const today = new Date().toLocaleDateString();\n      const lastMsgTime = createdAt.slice(0, 5);\n\n      if (createdAt.split(\".\")[3] !== today.split(\".\")[3]) {\n        lastMsgTime = createdAt;\n      }\n\n      this.setState({\n        roomInform: {\n          roomName: \"My chat\",\n          numberMessages: messagesLength,\n          numberUsers: users.size,\n          lastMessageDate: lastMsgTime\n        }\n      });\n    };\n\n    this.addNewMessage = data => {\n      const myInform = this.state.myInform;\n      const message = {\n        id: data.id,\n        userId: myInform.userId,\n        avatar: myInform.avatar,\n        user: myInform.user,\n        text: data.text,\n        createdAt: data.createdAt,\n        editedAt: \"\"\n      };\n      this.changeHeader();\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n    };\n\n    this.deleteMessage = id => {\n      this.setState({\n        messages: this.state.messages.filter(message => {\n          return message.id !== id;\n        })\n      });\n    };\n\n    this.editMessage = ({\n      id,\n      text\n    }) => {\n      this.setState({\n        messages: this.state.messages.map(message => {\n          if (message.id === id) {\n            message.text = text;\n            message.editedAt = new Date().toString();\n          }\n\n          return message;\n        }),\n        edtMsg: {\n          id: \"\",\n          editMsg: false,\n          text: \"\"\n        }\n      });\n    };\n\n    this.clickToEdit = id => {\n      const text = this.state.messages.filter(message => message.id === id);\n      this.setState({\n        edtMsg: {\n          id,\n          editMsg: true,\n          text\n        }\n      });\n    };\n\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"14.28\"\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar: \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\"\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\").then(response => response.json()).then(data => {\n      this.setState({\n        messages: data\n      });\n      this.changeHeader();\n    });\n  }\n\n  render() {\n    {\n      console.log(this.state.messages.length);\n    }\n    const data = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pad-lr_chat\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        roomInfo: data.roomInform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messageWndw marg-t_20px\",\n        children: data.messages.length !== 0 ? /*#__PURE__*/_jsxDEV(MessageList, {\n          messages: data.messages,\n          myId: data.myInform.userId,\n          deleteMessage: this.deleteMessage,\n          clickToEdit: this.clickToEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), this.state.edtMsg.editMsg ? /*#__PURE__*/_jsxDEV(MessageInput, {\n        edtMsg: this.state.edtMsg,\n        editMessage: this.editMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MessageInput, {\n        addMessage: this.addNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/yarik/Documents/binary/react-stage1/part1/src/components/Chat/Chat.js"],"names":["React","Component","Header","MessageList","MessageInput","Spiner","Chat","constructor","props","changeHeader","allUserId","state","messages","map","msg","userId","messagesLength","length","users","Set","createdAt","Date","toLocaleDateString","today","lastMsgTime","slice","split","setState","roomInform","roomName","numberMessages","numberUsers","size","lastMessageDate","addNewMessage","data","myInform","message","id","avatar","user","text","editedAt","deleteMessage","filter","editMessage","toString","edtMsg","editMsg","clickToEdit","componentDidMount","fetch","then","response","json","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Spiner from \"../animatedElem/Spiner\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"14.28\",\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar:\n          \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\",\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          messages: data,\n        });\n        this.changeHeader();\n      });\n  }\n\n  changeHeader = () => {\n    const allUserId = this.state.messages.map((msg) => {\n      return msg.userId;\n    });\n    const messagesLength = this.state.messages.length;\n    const users = new Set(allUserId);\n    const createdAt = new Date(\n      this.state.messages[messagesLength - 1].createdAt\n    ).toLocaleDateString();\n    const today = new Date().toLocaleDateString();\n    const lastMsgTime = createdAt.slice(0,5);\n    if (createdAt.split(\".\")[3] !== today.split(\".\")[3]){\n      lastMsgTime = createdAt;\n    }\n    \n    this.setState({\n      roomInform: {\n        roomName: \"My chat\",\n        numberMessages: messagesLength,\n        numberUsers: users.size,\n        lastMessageDate: lastMsgTime\n      },\n    });\n  };\n\n  addNewMessage = (data) => {\n    const myInform = this.state.myInform;\n    const message = {\n      id: data.id,\n      userId: myInform.userId,\n      avatar: myInform.avatar,\n      user: myInform.user,\n      text: data.text,\n      createdAt: data.createdAt,\n      editedAt: \"\",\n    };\n    this.changeHeader();\n    this.setState({\n      messages: [...this.state.messages, message],\n    });\n  };\n\n  deleteMessage = (id) => {\n    this.setState({\n      messages: this.state.messages.filter((message) => {\n        return message.id !== id;\n      }),\n    });\n  };\n\n  editMessage = ({ id, text }) => {\n    this.setState({\n      messages: this.state.messages.map((message) => {\n        if (message.id === id) {\n          message.text = text;\n          message.editedAt = new Date().toString();\n        }\n        return message;\n      }),\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    });\n  };\n\n  clickToEdit = (id) => {\n    const text = this.state.messages.filter((message) => message.id === id);\n    this.setState({\n      edtMsg: {\n        id,\n        editMsg: true,\n        text,\n      },\n    });\n  };\n\n  render() {\n    {\n      console.log(this.state.messages.length);\n    }\n    const data = this.state;\n    return (\n      <div className=\"pad-lr_chat\">\n        <Header roomInfo={data.roomInform} />\n        <div className=\"chat-messageWndw marg-t_20px\">\n          {data.messages.length !== 0 ? (\n            <MessageList\n              messages={data.messages}\n              myId={data.myInform.userId}\n              deleteMessage={this.deleteMessage}\n              clickToEdit={this.clickToEdit}\n            />\n          ) : (\n            <Spiner />\n          )}\n        </div>\n        {this.state.edtMsg.editMsg ? (\n          <MessageInput\n            edtMsg={this.state.edtMsg}\n            editMessage={this.editMessage}\n          />\n        ) : (\n          <MessageInput addMessage={this.addNewMessage} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}